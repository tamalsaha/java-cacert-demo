/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeops.dev/csi-driver-cacerts/apis/cacerts/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CAProviderClassLister helps list CAProviderClasses.
// All objects returned here must be treated as read-only.
type CAProviderClassLister interface {
	// List lists all CAProviderClasses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAProviderClass, err error)
	// CAProviderClasses returns an object that can list and get CAProviderClasses.
	CAProviderClasses(namespace string) CAProviderClassNamespaceLister
	CAProviderClassListerExpansion
}

// cAProviderClassLister implements the CAProviderClassLister interface.
type cAProviderClassLister struct {
	indexer cache.Indexer
}

// NewCAProviderClassLister returns a new CAProviderClassLister.
func NewCAProviderClassLister(indexer cache.Indexer) CAProviderClassLister {
	return &cAProviderClassLister{indexer: indexer}
}

// List lists all CAProviderClasses in the indexer.
func (s *cAProviderClassLister) List(selector labels.Selector) (ret []*v1alpha1.CAProviderClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAProviderClass))
	})
	return ret, err
}

// CAProviderClasses returns an object that can list and get CAProviderClasses.
func (s *cAProviderClassLister) CAProviderClasses(namespace string) CAProviderClassNamespaceLister {
	return cAProviderClassNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CAProviderClassNamespaceLister helps list and get CAProviderClasses.
// All objects returned here must be treated as read-only.
type CAProviderClassNamespaceLister interface {
	// List lists all CAProviderClasses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAProviderClass, err error)
	// Get retrieves the CAProviderClass from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CAProviderClass, error)
	CAProviderClassNamespaceListerExpansion
}

// cAProviderClassNamespaceLister implements the CAProviderClassNamespaceLister
// interface.
type cAProviderClassNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CAProviderClasses in the indexer for a given namespace.
func (s cAProviderClassNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CAProviderClass, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAProviderClass))
	})
	return ret, err
}

// Get retrieves the CAProviderClass from the indexer for a given namespace and name.
func (s cAProviderClassNamespaceLister) Get(name string) (*v1alpha1.CAProviderClass, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("caproviderclass"), name)
	}
	return obj.(*v1alpha1.CAProviderClass), nil
}
